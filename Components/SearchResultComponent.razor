@page "/Search"
@inject GlobalService GlobalService



<h4>Saved Numbers</h4>

@if (GlobalService.savedNumbers.Count > 0)
{
    <ul class="list-group">
        @foreach (var number in GlobalService.savedNumbers)
        {
            <li class="list-group-item">
            @* <li class="list-group-item d-flex justify-content-between align-items-center"> *@ @*this will present in a line*@
                <div><b>Valid:</b> @number.valid</div>
                <div><b>Number:</b> @number.number</div>
                <div><b>International Format:</b> @number.international_format</div>
                <div><b>Country Prefix:</b> @number.country_prefix</div>
                <div><b>Country Code:</b> @number.country_code</div>
                <div><b>Country Name:</b> @number.country_name</div>
                @* <div><b>Location:</b> @number.location</div> *@
                <div><b>Carrier:</b> @number.carrier</div>
                <div><b>Line Type:</b> @number.line_type</div>
                @* Button to delete the specific saved number *@
                @* <button type="button" class="btn btn-outline-light" @onclick="() => DeleteNumber(number)">Delete</button> *@
            </li>   
        }
    </ul>

}
else
{
    <p>No saved searches yet.</p>
}

@code {
    /*public List<NumberValidationData> SavedNumbers { get; set; } = new();
    private void DeleteNumber(NumberValidationData number)
    {
        SavedNumbers.Remove(number);

        // Notifies the parent component of the change in the list
        StateHasChanged();
        }*/
}
