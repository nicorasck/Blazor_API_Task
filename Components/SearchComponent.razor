@inject GlobalService GlobalService
@* Nico Pico, DO NOT forget to pressent the list of Favorites 'ListOfFavorites'!!! 
Also testing a child component 'ChildComponent'
*@

<div class="home-page">

    <div class="history-card">
        <!-- If there are any saved numbers -->
        @if (GlobalService.SavedNumbers != null && GlobalService.SavedNumbers.Any())
        {
            <h3 style="text-align: center; margin-top: 20px;">Number History</h3>
            @foreach (var number in GlobalService.SavedNumbers)
            {
                <div class="card text-center my-3">
                    <div class="card-header">
                        <h5 style="font-weight: bold;">Saved Number</h5>
                    </div>
                    <div class="card-body">
                        <ul class="list-unstyled">
                            <li><b>Valid:</b> @(number.valid ? "Yes" : "No")</li>
                            <li><b>Number:</b> @number.number</li>
                            <li><b>International Format:</b> @number.international_format</li>
                            <li><b>Country Prefix:</b> @number.country_prefix</li>
                            <li><b>Country Code:</b> @number.country_code</li>
                            <li><b>Country Name:</b> @number.country_name</li>
                            <li><b>Carrier:</b> @number.carrier</li>
                            <li><b>Line Type:</b> @number.line_type</li>
                        </ul>
                    </div>
                    <div class="card-footer text-muted">
                        Saved at: @DateTime.Now.ToString("f")
                        <div>
                            @if (GlobalService.IsFavorite(number))
                            {
                                <button class="btn btn-danger" type="button" @onclick="() => ToggleFavorite(number)">Remove Favorite</button>
                            }
                            else
                            {
                                <button class="btn btn-success" type="button" @onclick="() => ToggleFavorite(number)">Add as Favorite</button>
                            }
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div style="text-align: center; margin-top: 20px; margin: 10px;">
                <h4>No saved searches yet.</h4>
                <p>Please validate and save a number to see it listed here.</p>
            </div>
        }
    </div>

    <button class="btn btn-info" @onclick="ToggleFavoriteNumbers" style="margin: 20px;">List of added favorites</button>
    @if(ShowFavoriteNumbers)
    {
        // looping through the list of favorites and then presenting them via the child component with help from cascading value.
        foreach (var number in GlobalService.ListOfFavorites)
        {
            <CascadingValue Value="number">
                <ChildComponent OnFavoriteToggle="StateHasChanged" />
            </CascadingValue>
        }
    }
    else 
    {
        <h3 style="text-align: center; margin-top: 20px;">No numbers have been saved!</h3>
    }

</div>

@code {

    private bool ShowFavoriteNumbers = false;
    private void ToggleFavorite(NumberValidationData number) // Function to toggle favorites
    {
        if (GlobalService.IsFavorite(number))
        {
            GlobalService.RemoveFavoriteNumber(number);
        }
        else
        {
            GlobalService.AddFavoriteNumber(number);
        }
        StateHasChanged(); // updating UI (website) to show the changes
    }

    private void ToggleFavoriteNumbers()
    {
        ShowFavoriteNumbers = !ShowFavoriteNumbers;
    }
}